"""add_default_access_table

Revision ID: b1562ebe8566
Revises: 0334bafca1e2
Create Date: 2024-10-29 19:00:58.945260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b1562ebe8566'
down_revision: Union[str, None] = '0334bafca1e2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('default_access',
    sa.Column('owner_user_id', sa.UUID(), nullable=False),
    sa.Column('granted_user_id', sa.UUID(), nullable=False),
    sa.Column('access_level', sa.String(length=20), server_default='search', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("access_level IN ('removed', 'search', 'transcript', 'owner')", name='valid_default_access_level'),
    sa.ForeignKeyConstraint(['granted_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('owner_user_id', 'granted_user_id')
    )
    op.drop_table('share_links')
    op.drop_table('projects')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='projects_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('share_links',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('meeting_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('access_level', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('max_uses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_uses', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('link_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.CheckConstraint("access_level::text = ANY (ARRAY['removed'::character varying, 'search'::character varying, 'transcript'::character varying]::text[])", name='valid_link_access_level'),
    sa.CheckConstraint("link_type::text = ANY (ARRAY['meeting'::character varying, 'project'::character varying]::text[])", name='valid_link_type'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='share_links_created_by_fkey'),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.meeting_id'], name='share_links_meeting_id_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='share_links_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='share_links_pkey')
    )
    op.drop_table('default_access')
    # ### end Alembic commands ###