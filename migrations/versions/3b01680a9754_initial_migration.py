"""initial migration

Revision ID: 3b01680a9754
Revises: 
Create Date: 2024-10-27 21:48:18.355072

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3b01680a9754'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user_tokens',
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('token')
    )
    op.create_index('idx_user_tokens_user_id', 'user_tokens', ['user_id'], unique=False)
    op.create_table('meeting_shares',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('access_level', sa.String(length=20), server_default='search', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.CheckConstraint("access_level IN ('removed', 'search', 'transcript')", name='valid_access_level'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.meeting_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('meeting_id', 'user_id', name='uq_meeting_user_share')
    )
    op.drop_table('items')
    op.drop_table('discussion_topic_association')
    op.drop_table('objects')
    op.drop_table('item_object')
    op.drop_table('topics')
    op.add_column('meetings', sa.Column('owner_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'meetings', 'users', ['owner_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'meetings', type_='foreignkey')
    op.drop_column('meetings', 'owner_id')
    op.create_table('topics',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('topics_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='topics_pkey'),
    sa.UniqueConstraint('name', name='topics_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('item_object',
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('object_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name='item_object_item_id_fkey'),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], name='item_object_object_id_fkey')
    )
    op.create_table('objects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='objects_pkey'),
    sa.UniqueConstraint('name', name='objects_name_key')
    )
    op.create_table('discussion_topic_association',
    sa.Column('discussion_point_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name='discussion_topic_association_topic_id_fkey')
    )
    op.create_table('items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('summary_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('referenced_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('meeting_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('speaker_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='items_pkey')
    )
    op.drop_table('meeting_shares')
    op.drop_index('idx_user_tokens_user_id', table_name='user_tokens')
    op.drop_table('user_tokens')
    op.drop_table('users')
    # ### end Alembic commands ###