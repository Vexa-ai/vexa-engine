"""update prompt model to use enum

Revision ID: 68e92a9378ef
Revises: e45a91a84d1d
Create Date: 2025-02-04 14:35:18.802886

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '68e92a9378ef'
down_revision: Union[str, None] = 'e45a91a84d1d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP TABLE IF EXISTS thread_speaker CASCADE')
    op.execute('DROP TABLE IF EXISTS meeting_speaker CASCADE')
    op.execute('DROP TABLE IF EXISTS discussion_points CASCADE')
    op.execute('DROP TABLE IF EXISTS user_meetings CASCADE')
    op.execute('DROP TABLE IF EXISTS thread_entity CASCADE')
    op.execute('DROP TABLE IF EXISTS outputs CASCADE')
    op.execute('DROP TABLE IF EXISTS meetings CASCADE')
    op.execute('DROP TABLE IF EXISTS speakers CASCADE')
    
    # Create enum type
    op.execute("CREATE TYPE prompttypeenum AS ENUM ('meeting', 'note', 'speaker', 'tag', 'chat')")
    op.add_column('prompts', sa.Column('type', sa.Enum('meeting', 'note', 'speaker', 'tag', 'chat', name='prompttypeenum'), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('prompts', 'type')
    op.execute('DROP TYPE prompttypeenum')
    # ### end Alembic commands ###
